package msg

import "fmt"

type ID uint8

const (
	InternalError ID = iota
	OperationCanceled

	// Currency set
	CurrSelection
	CurrSaved

	// Language set
	LangSelection
	LangSaved

	// Operation create
	CatSelection
	ExpenseSaved
	IncomeSaved

	// Category rename
	CatRenameTypeSelection
	CatRenameSelection
	CatRename
	CatRenamed

	// Category add
	CatAddTypeSelection
	CatAdd
	CatAdded

	KeywordsDeleted

	// logic errors
	InvalidCurr
	InvalidOperationFmt

	// message titles
	ExpenseCatsTitle
	IncomeCatsTitle

	// buttons
	BtnCancel
	BtnRUB
	BtnEUR
	BtnUSD

	BtnRUS
	BtnENG

	BtnOther
	BtnIncome
	BtnExpenses
)

type Message struct {
	RU string
	EN string
}

var messages = map[ID]Message{
	// General
	InternalError: {
		RU: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ",
		EN: "Internal server error, please try later",
	},
	OperationCanceled: {
		RU: "–¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
		EN: "Current operation is canceled",
	},

	// Steps
	CurrSelection: {
		RU: "–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –ª—é–±—É—é –≤–∞–ª—é—Ç—É –≤ ISO-4217 —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä UAH, KZT, GBP –∏ –¥—Ä—É–≥–∏–µ)",
		EN: "Choose from list or send any other currency in ISO-4217 format (for example UAH, KZT, GBP etc)",
	},
	CurrSaved: {
		RU: "<b>%s</b> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ –≤–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≤–∞–ª—é—Ç—ã —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <b>%s</b>",
		EN: "<b>%s</b> saved as your default currency, next time you send me a command without specifying currency I'll use <b>%s</b>",
	},
	CatSelection: {
		RU: "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–∞ –∏–ª–∏ –¥–æ—Ö–æ–¥–∞ –¥–ª—è —É—á–µ—Ç–∞",
		EN: "Choose category for the accounted expense or income",
	},
	LangSelection: {
		RU: "–í—ã–±–µ—Ä–∏ —è–∑—ã–∫ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —è –±—É–¥—É —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è",
		EN: "Select language which I'll be using for chatting with you",
	},
	LangSaved: {
		RU: "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ <b>%s</b>",
		EN: "Language was set to <b>%s</b>",
	},
	ExpenseSaved: {
		RU: "–ü–æ—Ç—Ä–∞—á–µ–Ω–æ <b>%s %s</b> –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ %s\n\n<i>%s</i>",
		EN: "Spent <b>%s %s</b> in %s category\n\n<i>%s</i>",
	},
	IncomeSaved: {
		RU: "–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ <b>%s %s</b> –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ %s\n\n<i>%s</i>",
		EN: "Earned <b>%s %s</b> in %s category\n\n<i>%s</i>",
	},
	CatRenameTypeSelection: {
		RU: "–ö–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–ª–∏ –¥–æ—Ö–æ–¥–æ–≤ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å?",
		EN: "Category of expenses or income would like to rename?",
	},
	CatRenameSelection: {
		RU: "–ö–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å?",
		EN: "Which category you want to rename?",
	},
	CatRename: {
		RU: "–ö–∞–∫ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è <b>%s</b>?",
		EN: "What will <b>%s</b> category be called now?",
	},
	CatRenamed: {
		RU: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è <b>%s</b> –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ <b>%s</b>",
		EN: "Category <b>%s</b> renamed to <b>%s</b>",
	},
	CatAddTypeSelection: {
		RU: "–ö–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–ª–∏ –¥–æ—Ö–æ–¥–æ–≤ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å?",
		EN: "Category of expenses or income would like to add?",
	},
	CatAdd: {
		RU: "–ö–∞–∫ –±—É–¥–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è –Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è?",
		EN: "What will new category be called?",
	},
	CatAdded: {
		RU: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è <b>%s</b> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞",
		EN: "Category <b>%s</b> successfully created",
	},
	KeywordsDeleted: {
		RU: "–í—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –æ–ø–µ—Ä–∞—Ü–∏–π —É–¥–∞–ª–µ–Ω—ã",
		EN: "All operation keywords deleted",
	},

	// Logic errors
	InvalidCurr: {
		RU: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–∞–ª—é—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å –≤–∞–ª—é—Ç—É –≤ ISO-4217 —Ñ–æ—Ä–º–∞—Ç–µ",
		EN: "Invalid currency format, provide currency code in ISO-4217 format",
	},

	// Message titles
	ExpenseCatsTitle: {
		RU: "‚ûñ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤",
		EN: "‚ûñ Expense categories",
	},
	IncomeCatsTitle: {
		RU: "‚ûï –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤",
		EN: "‚ûï Income categories",
	},
	InvalidOperationFmt: {
		RU: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏",
		EN: "Invalid operation format",
	},

	// Buttons
	BtnRUB: {
		RU: "üá∑üá∫ –†—É–±–ª–∏",
		EN: "üá∑üá∫ Rubles",
	},
	BtnUSD: {
		RU: "üá∫üá∏ –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ –¥–æ–ª–ª–∞—Ä—ã",
		EN: "üá∫üá∏ Dollars",
	},
	BtnEUR: {
		RU: "üá™üá∫ –ï–≤—Ä–æ",
		EN: "üá™üá∫ Euros",
	},
	BtnCancel: {
		RU: "–û—Ç–º–µ–Ω–∞",
		EN: "Cancel",
	},
	BtnRUS: {
		RU: "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
		EN: "üá∑üá∫ Russian",
	},
	BtnENG: {
		RU: "üá∫üá∏ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π",
		EN: "üá∫üá∏ English",
	},
	BtnOther: {
		RU: "ü§∑ –î—Ä—É–≥–æ–µ",
		EN: "ü§∑ Other",
	},
	BtnIncome: {
		RU: "üìà –î–æ—Ö–æ–¥—ã",
		EN: "üìà Income",
	},
	BtnExpenses: {
		RU: "üìâ –†–∞—Å—Ö–æ–¥—ã",
		EN: "üìâ Expenses",
	},
}

func Get(id ID, lang string) string {
	msg, ok := messages[id]
	if !ok {
		return messages[InternalError].EN
	}
	switch lang {
	case "en":
		return msg.EN
	case "ru":
		return msg.RU
	default:
		return msg.EN
	}
}

func Getf(id ID, lang string, args ...any) string {
	return fmt.Sprintf(Get(id, lang), args...)
}
