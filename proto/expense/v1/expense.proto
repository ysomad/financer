syntax = "proto3";

package expense.v1;
option go_package = "expense/v1;expensev1";

import "buf/validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/type/money.proto";
import "google/type/date.proto";

// ExpenseService working with user specific expenses.
service ExpenseService {
    rpc DeclareExpense(DeclareExpenseRequest) returns (Expense);
    rpc ListExpenses(ListExpensesRequest) returns (ListExpensesResponse) {
        option idempotency_level = NO_SIDE_EFFECTS;
    };
    rpc DeleteExpense(DeleteExpenseRequest) returns (google.protobuf.Empty);
    rpc UpdateExpense(UpdateExpenseRequest) returns (Expense);
}

message Expense {
    string id = 1;
    google.type.Money money = 2;
    string name = 3;
    string category = 4;
    google.type.Date date = 5; // when expense was happen
}

message DeclareExpenseRequest {
    google.type.Money money = 1;
    string name = 2 [(buf.validate.field).string = { min_len: 2, max_len: 64 }]; // required
    string category_id = 3; // not specified will come to "Not specified" category
    google.type.Date date = 4;
}

message ListExpensesRequest {
    string search_query = 1;
    google.type.Date date = 2;
    int32 page_size = 50;
    string page_token = 51;
}

message ListExpensesResponse {
    repeated Expense expenses = 1;
    string next_page_token = 2;
}

message DeleteExpenseRequest {
    string id = 1;
}

message UpdateExpenseRequest {
    string id = 1;
    google.type.Money amount = 2;
    string title = 3;
    string category_id = 4;
}
